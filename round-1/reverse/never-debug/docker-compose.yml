services:
  db:
    image: 396961015104.dkr.ecr.ap-east-1.amazonaws.com/challenges/never-debug/db:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: challenge
    networks: [internal]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d challenge"]
      interval: 5s
      timeout: 5s
      retries: 10
  web:
    image: 396961015104.dkr.ecr.ap-east-1.amazonaws.com/challenges/never-debug/challenge:latest
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://postgres:postgrespassword@db:5432/challenge?sslmode=disable"
    restart: unless-stopped
    networks: [internal, traefik]
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-internal
      - traefik.http.routers.reverse-task.rule=Host(`never-debug.ctf.empasoft.tech`)
      - traefik.http.services.reverse-task.loadbalancer.server.port=8080
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.25"
          memory: 256M
    read_only: true
    security_opt:
      - no-new-privileges:true
  watchdog:
    image: 396961015104.dkr.ecr.ap-east-1.amazonaws.com/challenges/never-debug/watchdog:latest
    depends_on:
      db:
        condition: service_healthy
    read_only: true
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.25"
          memory: 256M
    environment:
      FLAG: ECTF{n1c3_d3bugg1ng_sk1llz_(1)_g00000_(2)}
      DB_HOST: db
      DB_NAME: challenge
      DB_USER: postgres
      DB_PASSWORD: postgrespassword
    networks: [internal]
    restart: unless-stopped
networks:
  internal:
    internal: true
  traefik:
    name: traefik-internal
    external: true
