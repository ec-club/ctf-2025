import ms from "ms";
import { getEpochProof, getEpochSeed } from "@/core/game/randomness";

import { DataTable } from "@/widgets/epoch-history-data/data-table";
import { epochHistoryColumns } from "@/widgets/epoch-history-data/columns";
import { RevealSeedButton } from "@/widgets/epoch-history-data/RevealSeedButton";

import { rouletteSections } from "@/data/roulette";
import { rouletteValueColumns } from "@/widgets/roulette-value-columns";

export default async function FairPage() {
  const currentEpochProof = await getEpochProof();
  return (
    <main className="container p-8 text-white">
      <h2 className="text-xl font-bold">Fair game</h2>
      <p className="mt-4">
        Our game uses a provably fair system to ensure that all outcomes are
        random and cannot be manipulated by either the player or the house. This
        means that every roll of the dice is determined by a combination of a
        server seed and a nonce, which together create a unique and
        unpredictable result for each game round.
      </p>
      <h3 className="mt-4 text-lg font-semibold">About server seed</h3>
      <p className="mt-2">
        The server seed is a random value generated by the server before the
        game starts. It is kept secret and is used to ensure that the game
        outcomes are fair and cannot be predicted or manipulated.
      </p>
      <p>
        However, the server seed is released after each seed change, which
        happens every 5 minutes. We don&apos;t release the nonce itself before the
        end of the epoch, but you can see the current nonce hash, which is{" "}
        <code>{currentEpochProof}</code>. This is a SHA-256 hash digest of the
        current server seed.
      </p>
      <p className="mt-4 mb-2">Below is the table with last 5 seeds:</p>
      <DataTable
        columns={epochHistoryColumns}
        data={[
          {
            startTime: new Date(Date.now() - (Date.now() % ms("5m"))),
            endTime: new Date(Date.now() - (Date.now() % ms("5m")) + ms("5m")),
            seed: <RevealSeedButton />,
            proof: currentEpochProof,
          },
          ...(await Promise.all(
            Array.from({ length: 4 }).map(async (_, i) => {
              const endTime =
                Date.now() - (Date.now() % ms("5m")) - ms("5m") * i;
              const startTime = endTime - ms("5m");
              const seed = (await getEpochSeed(startTime / ms("5m"))).toString(
                "hex"
              );
              const proof = await getEpochProof(startTime / ms("5m"));
              return {
                startTime: new Date(startTime),
                endTime: new Date(endTime),
                seed,
                proof,
              };
            })
          )),
        ]}
      />
      <h3 className="mt-4 text-lg font-semibold">
        About how rolls are generated
      </h3>
      <p>
        Roll values are generated as follows:{" "}
        <code>
          SHAKE256(epochSeed + roundSeed, 16) * {rouletteSections.length} / (2
          ** 16)
        </code>
        . The generated result is an index of the roulette section, which
        determines the outcome of the game round. You can verify the fairness of
        each roll by checking the server seed and nonce used to generate it and
        tool located{" "}
        <a
          href="https://emn178.github.io/online-tools/shake256/"
          className="underline"
        >
          here
        </a>
        .
      </p>
      <p className="my-2">
        You can compare the resulting value against the original roulette
        sections:
      </p>
      <DataTable
        columns={rouletteValueColumns}
        data={rouletteSections.map((section, index) => ({ ...section, index }))}
      />
    </main>
  );
}
